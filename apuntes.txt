    APUNTES:

## Si no se define verbose y timeout al enviar paquetes Scapy se queda 'colgado' y no dejará terminar la ejecución del script.
verbose=0 -> es necesario para que no ensucie la salida de la consola.
timeout=n -> donde n son los segundos que esperará para parar.

## Como trabajan los modos de envío:
srp() -> capa 2, frames
sr1() -> capa 3, paquetes --Envía un único paquete y devuelve solo la primera respuesta recibida.

    FUNCIONALIDADES:

## ESCANEO 
Mediante un envio de un frame ARP se descubriran los hosts de la red. 
En Scapy se puede definir el modo de envio configurando op -> op=1 == who-has, op=2 == it-at
Enviaremos el paquete op=1 y recibiremos una tupla con dos elementos. Se puede acceder a ellos:
paquete[0] -> son los que tuvieron respuesta , paquete[1] -> los que no tuvieron respuesta

Agregado: 
- Se puede introducir la red que será objetivo del escaneo. -r --range

## PING 
Envio de un paquete ICMP. 

Agregado: 
- Se puede introducir el objetivo para enviar el paquete ICMP. -t --target 

    TRABAJANDO:

## SERVICIOS
Averiguar que tipo de servicio está escuchando en un puerto e ip. Estoy teniendo problemas con la secuencia en la que trabaja TCP. 
No sé como obtener la información del servicio.

-22/05/2025
Llevo días probando a intentarlo con Scapy sin éxito. El problema era que Scapy sólo trabaja hasta la capa 4, y estaba intentando obtener información
de la capa de aplicación para averiguar si en un puerto había un servidor SSH. Para ello, se necesita usar socket para poder hacer la conexión y 
poder recibir el banner de SSH. Al final fui capaz de hacerlo, aunque creo que no sirven para todos, tengo que instalar otros servicios y seguir probando para ver si los detecta tambien. 
https://docs.python.org/3/library/socket.html -> socket

# python3 main.py -S -t 10.22.0.10 -p 21
En el puerto 21 se detecto: 220 (vsFTPd 3.0.3)

# python3 main.py -S -t 10.22.0.10 -p 5050
En el puerto 5050 se detecto: SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5

-23/05/2025 (EN PROCESO)
Me gustaría implementar un tcpdump para ver que está ocurriendo según los argumentos que se seleccionen, una opción como -v --verbose
https://docs.python.org/es/3.8/library/threading.html -> threading 

-25/05/2025
Trabajar en la función servicios para que te diga exactamente que pasó. Si el puerto está abierto, cerrado o filtrado.
